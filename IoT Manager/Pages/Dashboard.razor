@page "/"
@inject HttpClient Http

<PageTitle>Dashboard</PageTitle>

<!-- content -->
<div class="container mt-5">
    <h2>Dashboard</h2>
    <p class="text-secondary"><em>Overview of your Internet of Things</em></p>

    <div class="row mt-5">

        <!-- stats -->
        <div class="col-3">
            <div class="card shadow">
                <div class="card-body">
                    <div class="pb-3 mb-4">
                        <h4 class="card-title mb-0">
                            <i class="bi-bar-chart-fill"></i>
                            Daily Stats
                        </h4>
                        <p class="card-text text-muted">With supporting text</p>
                    </div>

                    <!-- rows for testing -->
                    <StatsItem Title="Total Devices" LeadIn="Total Devices" Value=@maschineCount.ToString() />
                    <StatsItem Title="New Devices" LeadIn="Number of new devices" Value=@newMaschineCount.ToString() />
                    <StatsItem Title="C2D Count" LeadIn="Cloud to Device messages" Value="48"/>

                </div>
            </div>
        </div>

        <!-- index -->
        <div class="col">
            <div class="card shadow">
                <div class="card-body">

                    <div class="row pb-3">
                        <div class="col">
                            <h4 class="card-title mb-0">List of Devices</h4>
                            <p class="card-text text-muted">With supporting text below as a natural lead-in to additional content.</p>
                        </div>
                        <div class="col-2">
                            <a href="#" class="btn btn-primary float-end">New Device</a>
                        </div>
                    </div>

                    <table class="table mt-3">
                        <thead>
                            <tr>
                                <th scope="col"><i class="bi-stack me-2"></i>Device ID</th>
                                <th scope="col">Location</th>
                                <th scope="col">Date</th>
                                <th scope="col">Type</th>
                                <th scope="col">Status</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>

                        <tbody>

                            <!-- rows for testing -->
                            @foreach(var maschine in maschines) {
                                <TableRowItem UUID=@maschine.UUID Location=@maschine.Location Date=@maschine.Date Type=@maschine.Type IsOnline=@maschine.IsOnline />
                            }

                        </tbody>
                    </table>

                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Maschine[]? maschines;
    private int maschineCount;
    private int newMaschineCount;

    protected override async Task OnInitializedAsync()
    {
        maschines = await Http.GetFromJsonAsync<Maschine[]>("sample-data/maschines.json");
        maschineCount = maschines.Count();
        newMaschineCount = maschines.Where(m => (DateTime.Now - DateTime.Parse(m.Date)).TotalDays < 4).Count();
    }

    public class Maschine
    {
        public string UUID { get; set; } = "";
        public string Location { get; set; } = "";
        public string Date { get; set; } = "";
        public string Type { get; set; } = "";
        public bool IsOnline { get; set; }
    }
}
